/ ===== 4. LOGIN PAGE SCRIPT (for src/pages/login.astro) =====
// Replace the script section in your login.astro with this:


<script is:inline>
  import { AuthService } from '../utils/auth.js';

  document.addEventListener("DOMContentLoaded", function () {
    const loginForm = document.getElementById("login-form");
    const loginMessageElement = document.getElementById("login-message");
    const emailInput = document.getElementById("email");
    const passwordInput = document.getElementById("password");
    const loginButton = document.getElementById("login-button");
    const togglePasswordButton = document.getElementById("togglePassword");

    if (!loginForm || !loginMessageElement || !emailInput || !passwordInput || !loginButton) {
      console.error("One or more required login elements not found.");
      return;
    }

    // Toggle password visibility
    if (togglePasswordButton) {
      togglePasswordButton.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        
        const eyeIcon = type === 'password' 
          ? `<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 10 3 0 01-6 0 3 10 3 0 016 0z" /><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" /></svg>`
          : `<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.542-7a9.965 9.965 0 011.026-1.789m6.965-2.09A9.965 9.965 0 0112 5c4.478 0 8.268 2.943 9.542 7-.996 3.091-4.045 6-9.542 6.001zm0 0a3 3 0 11-6 0 3 3 0 016 0z" /></svg>`;
        
        this.innerHTML = eyeIcon;
      });
    }

    // Handle login form submission
    loginForm.addEventListener("submit", async function (event) {
      event.preventDefault();

      const email = emailInput.value.trim();
      const password = passwordInput.value.trim();

      if (!email || !password) {
        loginMessageElement.textContent = "❌ Имэйл болон нууц үгээ оруулна уу.";
        loginMessageElement.style.color = "red";
        return;
      }

      loginMessageElement.textContent = "";
      loginButton.disabled = true;
      loginButton.textContent = "Нэвтэрч байна...";
      loginButton.classList.add("opacity-75", "cursor-not-allowed");

      try {
        // Import the API client dynamically
        const { default: apiClient } = await import('../api/apiClient.jsx');
        const result = await apiClient.auth.login(email, password);

        if (result.success) {
          loginMessageElement.textContent = "✅ Амжилттай нэвтэрлээ!";
          loginMessageElement.style.color = "green";
          
          // Redirect after successful login
          setTimeout(() => {
            const redirectUrl = new URLSearchParams(window.location.search).get('redirect') || '/';
            window.location.href = redirectUrl;
          }, 1500);
        } else {
          loginMessageElement.textContent = `❌ ${result.message}`;
          loginMessageElement.style.color = "red";
        }
      } catch (error) {
        console.error("Login failed:", error);
        loginMessageElement.textContent = "❌ Сервертэй холбогдоход алдаа гарлаа. Дахин оролдоно уу.";
        loginMessageElement.style.color = "red";
      } finally {
        loginButton.disabled = false;
        loginButton.textContent = "Нэвтрэх";
        loginButton.classList.remove("opacity-75", "cursor-not-allowed");
      }
    });
  });
</script>
*/

// ===== 5. REGISTER PAGE SCRIPT (for src/pages/register.astro) =====
// Replace the script section in your register.astro with this:

/*
<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("register-form-page");
    const emailInput = document.getElementById("register-email-page");
    const passwordInput = document.getElementById("register-password-page");
    const confirmPasswordInput = document.getElementById("register-confirm-password-page");
    const messageElement = document.getElementById("register-message-page");
    const registerButton = document.getElementById("register-button-page");

    if (!form || !emailInput || !passwordInput || !confirmPasswordInput || !messageElement || !registerButton) {
      console.error("One or more required registration page elements not found.");
      return;
    }

    form.addEventListener("submit", async function (event) {
      event.preventDefault();

      const email = emailInput.value.trim();
      const password = passwordInput.value.trim();
      const confirmPassword = confirmPasswordInput.value.trim();

      // Client-side validation
      if (!email || !password || !confirmPassword) {
        messageElement.textContent = "❌ Бүх талбарыг бөглөнө үү!";
        messageElement.style.color = "red";
        return;
      }

      if (password.length < 6) {
        messageElement.textContent = "❌ Нууц үг дор хаяж 6 тэмдэгтээс тогтоно!";
        messageElement.style.color = "red";
        return;
      }

      if (password !== confirmPassword) {
        messageElement.textContent = "❌ Нууц үгнүүд таарахгүй байна!";
        messageElement.style.color = "red";
        return;
      }

      messageElement.textContent = "";
      registerButton.disabled = true;
      registerButton.textContent = "Бүртгүүлж байна...";
      registerButton.classList.add("opacity-75", "cursor-not-allowed");

      try {
        // Import the API client dynamically
        const { default: apiClient } = await import('../api/apiClient.jsx');
        
        // Extract name from email (or you can add a name field)
        const fullName = email.split('@')[0];
        
        const result = await apiClient.auth.register(fullName, email, password, 'USER');

        if (result.success) {
          messageElement.textContent = "✅ Амжилттай бүртгэгдлээ! Нэвтрэх хуудас руу шилжинэ үү.";
          messageElement.style.color = "green";
          form.reset();
          
          // Redirect to login page after successful registration
          setTimeout(() => window.location.href = '/login', 2000);
        } else {
          messageElement.textContent = `❌ ${result.message}`;
          messageElement.style.color = "red";
        }
      } catch (error) {
        console.error("Registration request failed:", error);
        messageElement.textContent = "❌ Сервертэй холбогдоход алдаа гарлаа. Дахин оролдоно уу.";
        messageElement.style.color = "red";
      } finally {
        registerButton.disabled = false;
        registerButton.textContent = "Бүртгүүлэх";
        registerButton.classList.remove("opacity-75", "cursor-not-allowed");
      }
    });
  });
</script>
