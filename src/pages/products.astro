---
import BaseLayout from "../layouts/BaseLayout.astro";
import ProductCard from "../components/ProductCard.astro";
import apiClient from "../api/apiClient.jsx";

const PAGE_SIZE = 24;
const url = new URL(Astro.request.url);
const page = Math.max(1, parseInt(url.searchParams.get('page') ?? '1', 10));
const categoryID = url.searchParams.get('categoryID');

let products: any[] = [];
let totalPages = 1;
let error: string | null = null;

try {
  const data = categoryID
    ? await apiClient.products.getByCategoryId(categoryID, page - 1, PAGE_SIZE)
    : await apiClient.products.getPage(page - 1, PAGE_SIZE);
  products = Array.isArray(data.content) ? data.content : [];
  totalPages = Math.max(1, data.totalPages || 1);
} catch (e) {
  console.error('Failed to load products:', e);
  error = 'Бүтээгдэхүүн татахад алдаа гарлаа.';
}

function getPageUrl(p: number) {
  const validPage = Math.max(1, Math.min(p, totalPages));
  const q = new URLSearchParams();
  q.set('page', String(validPage));
  if (categoryID) q.set('categoryID', categoryID);
  return `/products?${q.toString()}`;
}

const pages: (number | string)[] = [];
const pageRange = 2;
if (totalPages > 1) {
  const start = Math.max(1, page - pageRange);
  const end = Math.min(totalPages, page + pageRange);
  if (start > 1) {
    pages.push(1);
    if (start > 2) pages.push('...');
  }
  for (let i = start; i <= end; i++) pages.push(i);
  if (end < totalPages) {
    if (end < totalPages - 1) pages.push('...');
    pages.push(totalPages);
  }
}
---
<BaseLayout title="Бүтээгдэхүүн" description="Бүтээгдэхүүнүүд">
  <section class="max-w-7xl mx-auto px-6 lg:px-8 py-8">
    <div class="flex items-center justify-between mb-4">
      <h1 class="text-2xl sm:text-3xl font-bold">Бүтээгдэхүүнүүд</h1>
    </div>

    {error ? (
      <div class="text-center py-12">
        <p class="text-red-600">{error}</p>
      </div>
    ) : (
      <>
        <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 xl:grid-cols-6 gap-4">
          {products.map((p: any) => (
            <ProductCard product={p} />
          ))}
        </div>

        {totalPages > 1 && (
          <div class="flex flex-wrap justify-center mt-8 gap-2">
            <a href={getPageUrl(page - 1)} class={`px-3 py-1 rounded border ${page <= 1 ? 'pointer-events-none opacity-50 bg-gray-100 text-gray-400' : 'bg-white text-gray-700 hover:bg-gray-50'}`}>Өмнөх</a>
            {pages.map((p) => (
              p === '...'
                ? <span class="px-3 py-1 text-gray-500">...</span>
                : <a href={getPageUrl(p as number)} class={`px-3 py-1 rounded ${page === p ? 'bg-[#f7941e] text-white' : 'bg-white border text-gray-700 hover:bg-gray-50'}`}>{p}</a>
            ))}
            <a href={getPageUrl(page + 1)} class={`px-3 py-1 rounded border ${page >= totalPages ? 'pointer-events-none opacity-50 bg-gray-100 text-gray-400' : 'bg-white text-gray-700 hover:bg-gray-50'}`}>Дараах</a>
          </div>
        )}
      </>
    )}
  </section>
</BaseLayout>