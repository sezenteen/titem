---
import BaseLayout from "../layouts/BaseLayout.astro";
import ProductCard from "../components/ProductCard.astro";
import Carousel from "../components/Carousel.astro";

const PAGE_SIZE = 20; // products per page
const url = new URL(Astro.request.url);
const page = parseInt(url.searchParams.get('page') ?? '1', 10); // frontend 1-indexed

let products = [];
let totalProducts = 0;
let totalPages = 0;
let error = null;

// Fetch paginated products from backend
try {
    const response = await fetch(`http://localhost:8080/api/product?page=${page - 1}&size=${PAGE_SIZE}`);
    if (!response.ok) throw new Error(`HTTP алдаа! статус: ${response.status}`);

    const data = await response.json();
    products = data.content || [];
    totalProducts = data.totalElements || 0;
    totalPages = data.totalPages || 0;
} catch (err) {
    console.error("Бүтээгдэхүүнийг татаж чадсангүй:", err);
    error = "Бүтээгдэхүүнүүдийг татаж чадсангүй. Таны сүлжээ эсвэл серверт асуудал байна.";
}

// Display all fetched products in the main grid
const mainProducts = products;
// For featured ribbons, pick the first 8 of current page
const featured = products.slice(0, 8);

function getPageUrl(p) {
    const validPage = Math.max(1, Math.min(p, totalPages));
    return `/?page=${validPage}`;
}

// Create pagination range with ellipsis
const pageRange = 2;
const pages = [];
if (totalPages > 1) {
    const start = Math.max(1, page - pageRange);
    const end = Math.min(totalPages, page + pageRange);

    if (start > 1) {
        pages.push(1);
        if (start > 2) pages.push("...");
    }
    for (let i = start; i <= end; i++) pages.push(i);
    if (end < totalPages) {
        if (end < totalPages - 1) pages.push("...");
        pages.push(totalPages);
    }
}
---

<BaseLayout title="Нүүр хуудас">
    <div class="px-[3%] py-3 2xl:px-[8%]">
        <Carousel />
    </div>

    <section class="max-w-7xl mx-auto px-6 lg:px-8">
        <!-- Category ribbon -->
        <div class="mt-4 mb-6">
            <div class="flex items-center gap-2 text-gray-700 mb-2">
                <span class="h-3 w-3 rounded-full bg-[#f7941e]"></span>
                <h2 class="text-xl font-semibold">Ангилал</h2>
            </div>
            <nav class="bg-white rounded-xl shadow p-3">
                <!-- CategoryList is inside Header; this is an extra space for future custom ribbons if needed -->
                <div class="text-sm text-gray-500">Дээд цэсэнд байрлах ангиллыг ашиглаж хайж болно.</div>
            </nav>
        </div>

        <!-- Featured row -->
        <div class="mt-6">
            <div class="flex items-center gap-2 text-gray-700 mb-3">
                <span class="h-3 w-3 rounded-full bg-[#003375]"></span>
                <h2 class="text-xl font-semibold">Онцлох</h2>
            </div>
            <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 xl:grid-cols-6 gap-4">
                {featured.map((p: any) => (
                    <ProductCard product={p} />
                ))}
            </div>
        </div>

        <!-- All products grid -->
        <div class="bg-gray-50 p-6 rounded-xl shadow-inner mt-8">
            <h2 class="text-2xl font-semibold text-center mb-6">Шинэ бүтээгдэхүүнүүд</h2>

            {error ? (
                <div class="text-center py-12">
                    <p class="text-xl text-red-600">{error}</p>
                </div>
            ) : mainProducts.length > 0 ? (
                <>
                    <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 xl:grid-cols-6 gap-4">
                        {mainProducts.map((product: any) => (
                            <ProductCard product={product} />
                        ))}
                    </div>

                    {totalPages > 1 && (
                        <div class="flex flex-wrap justify-center mt-8 gap-2">
                            {page > 1 && (
                                <a href={getPageUrl(page - 1)} class="px-3 py-1 rounded bg-white border text-gray-700 hover:bg-gray-50">
                                    Өмнөх
                                </a>
                            )}
                            {pages.map(p => (
                                p === "..." ? (
                                    <span class="px-3 py-1 text-gray-500">...</span>
                                ) : (
                                    <a href={getPageUrl(p)} class={`px-3 py-1 rounded ${page === p ? 'bg-[#f7941e] text-white' : 'bg-white border text-gray-700 hover:bg-gray-50'}`}>
                                        {p}
                                    </a>
                                )
                            ))}
                            {page < totalPages && (
                                <a href={getPageUrl(page + 1)} class="px-3 py-1 rounded bg-white border text-gray-700 hover:bg-gray-50">
                                    Дараах
                                </a>
                            )}
                        </div>
                    )}
                </>
            ) : (
                <div class="text-center py-12">
                    <p class="text-xl text-gray-600">Одоогоор бүтээгдэхүүн байхгүй байна.</p>
                    <p class="text-gray-500 mt-2">Дараарай дахин шалгана уу.</p>
                </div>
            )}
        </div>
    </section>
</BaseLayout>
